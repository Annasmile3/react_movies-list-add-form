{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","addTitle","target","setState","value","addDescription","addImgUrl","addImdbUrl","addImdbId","handleSubmit","event","preventDefault","props","addMovie","this","onSubmit","htmlFor","id","placeholder","onChange","rows","type","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4f1db63.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  addTitle = ({ target }) => {\n    this.setState({\n      title: target.value,\n    });\n  }\n\n  addDescription = ({ target }) => {\n    this.setState({\n      description: target.value,\n    });\n  }\n\n  addImgUrl = ({ target }) => {\n    this.setState({\n      imgUrl: target.value,\n    });\n  }\n\n  addImdbUrl = ({ target }) => {\n    this.setState({\n      imdbUrl: target.value,\n    });\n  }\n\n  addImdbId = ({ target }) => {\n    this.setState({\n      imdbId: target.value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    this.props.addMovie({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <form className=\"new-movie\" onSubmit={this.handleSubmit}>\n        <label\n          htmlFor=\"title\"\n          className=\"new-movie__caption\"\n        >\n         Title:\n        </label>\n        <input\n          className=\"new-movie__input\"\n          id=\"title\"\n          placeholder=\"Enter the movie title\"\n          value={title}\n          onChange={this.addTitle}\n        />\n        <label\n          htmlFor=\"description\"\n          className=\"new-movie__caption\"\n        >\n          Description:\n        </label>\n        <textarea\n          className=\"new-movie__input new-movie__textarea\"\n          placeholder=\"Enter the movie description\"\n          id=\"description\"\n          rows=\"8\"\n          value={description}\n          onChange={this.addDescription}\n        />\n        <label\n          htmlFor=\"imgUrl\"\n          className=\"new-movie__caption\"\n        >\n          URL of image:\n        </label>\n        <input\n          id=\"imgUrl\"\n          placeholder=\"Enter the image URL\"\n          className=\"new-movie__input\"\n          value={imgUrl}\n          onChange={this.addImgUrl}\n        />\n        <label\n          htmlFor=\"imdbUrl\"\n          className=\"new-movie__caption\"\n        >\n          Movie imdbUrl:\n        </label>\n        <input\n          id=\"imdbUrl\"\n          placeholder=\"Enter the imdb URL\"\n          className=\"new-movie__input\"\n          value={imdbUrl}\n          onChange={this.addImdbUrl}\n        />\n        <label\n          htmlFor=\"imdbId\"\n          className=\"new-movie__caption\"\n        >\n          Imdb id:\n        </label>\n        <input\n          id=\"imdbId\"\n          className=\"new-movie__input\"\n          placeholder=\"Enter the imdb ID\"\n          value={imdbId}\n          onChange={this.addImdbId}\n        />\n        <button\n          type=\"submit\"\n          className=\"new-movie__button\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((prevState) => {\n      return {\n        movies: [...prevState.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h3 className=\"new-movie__title\">Add new movie</h3>\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}