{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","error","handleChange","target","name","value","setState","handleSubmit","event","preventDefault","isError","trim","props","addMovie","this","onSubmit","htmlFor","id","placeholder","onChange","rows","type","Component","App","moviesFromServer","prevState","style","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a42c76e3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    error: false,\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let isError = false;\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (title.trim() === ''\n        || imgUrl.trim() === ''\n        || imdbUrl.trim() === ''\n        || imdbId.trim() === '') {\n      isError = true;\n      this.setState({\n        error: true,\n      });\n    }\n\n    if (!isError) {\n      this.props.addMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        error: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      error,\n    } = this.state;\n\n    return (\n      <form className=\"new-movie\" onSubmit={this.handleSubmit}>\n        <label\n          htmlFor=\"title\"\n          className=\"new-movie__caption\"\n        >\n         Title:\n        </label>\n        <input\n          className=\"new-movie__input\"\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Enter the movie title\"\n          value={title}\n          onChange={this.handleChange}\n        />\n        {error \n          && title.trim() === '' \n          && <div className=\"new-movie__error\">Enter title</div>}\n        <label\n          htmlFor=\"description\"\n          className=\"new-movie__caption\"\n        >\n          Description:\n        </label>\n        <textarea\n          className=\"new-movie__input new-movie__textarea\"\n          placeholder=\"Enter the movie description\"\n          id=\"description\"\n          name=\"description\"\n          rows=\"8\"\n          value={description}\n          onChange={this.handleChange}\n        />\n        <label\n          htmlFor=\"imgUrl\"\n          className=\"new-movie__caption\"\n        >\n          URL of image:\n        </label>\n        <input\n          id=\"imgUrl\"\n          name=\"imgUrl\"\n          placeholder=\"Enter the image URL\"\n          className=\"new-movie__input\"\n          value={imgUrl}\n          onChange={this.handleChange}\n        />\n        {error\n          && imgUrl.trim() === ''\n          && <div className=\"new-movie__error\">Enter the imgURL</div>}\n        <label\n          htmlFor=\"imdbUrl\"\n          className=\"new-movie__caption\"\n        >\n          Movie imdbUrl:\n        </label>\n        <input\n          id=\"imdbUrl\"\n          name=\"imdbUrl\"\n          placeholder=\"Enter the imdb URL\"\n          className=\"new-movie__input\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n        />\n        {error\n          && imdbUrl.trim() === ''\n          && <div className=\"new-movie__error\">Enter the imdbUrl</div>}\n        <label\n          htmlFor=\"imdbId\"\n          className=\"new-movie__caption\"\n        >\n          Imdb id:\n        </label>\n        <input\n          id=\"imdbId\"\n          name=\"imdbId\"\n          className=\"new-movie__input\"\n          placeholder=\"Enter the imdb ID\"\n          value={imdbId}\n          onChange={this.handleChange}\n        />\n        {error\n          && imdbId.trim() === ''\n          &&<div className=\"new-movie__error\">Enter the imdbId</div>}\n        <button\n          type=\"submit\"\n          className=\"new-movie__button\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h3 style={{ textAlign: 'center' }}>Add new movie</h3>\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}